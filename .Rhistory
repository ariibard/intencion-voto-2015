theme_minimal()
elbow_plot
library(factoextra)
set.seed(123)
kmeans_result <- kmeans(df_cluster, centers = 3)
# Visualizar los resultados ponderados
fviz_cluster(kmeans_result, data = df_cluster, geom = "point")
df_cluster$cluster <- kmeans_result$cluster
aggregate(. ~ cluster, data = df_cluster, FUN = mean)
aggregate(. ~ cluster, data = df_cluster, FUN = mean)
#unique(df_potencial_ba$voto_final)
comp_elect_bsas <- df_potencial_ba
# armo df para crear dummys
df_dummys <- df_potencial_ba |>
dplyr::select(gestion_cristina, economia_fliar_2_anos, economia_pais_2_anos, continuidad_o_cambio, voto_acotado)
#Creating Dummy Variables
dummy<- data.frame(sapply(df_dummys,function(x) data.frame(model.matrix(~x-1,data =df_dummys))[,-1])) |>
clean_names()
# uno dfs
comp_elect_bsas <- comp_elect_bsas|>
dplyr::select(ua, voto_fpv, ponderacion_eph)|>
cbind(dummy)
#unique(df_potencial_ba$voto_final)
comp_elect_bsas <- df_potencial_ba
# armo df para crear dummys
df_dummys <- df_potencial_ba |>
dplyr::select(gestion_cristina, economia_fliar_2_anos, economia_pais_2_anos, continuidad_o_cambio, voto_acotado)
#Creating Dummy Variables
dummy<- data.frame(sapply(df_dummys,function(x) data.frame(model.matrix(~x-1,data =df_dummys))[,-1])) |>
clean_names()
# uno dfs
comp_elect_bsas <- comp_elect_bsas|>
dplyr::select(ua, ponderacion_eph)|>
cbind(dummy)
df_cluster <- comp_elect_bsas |>
dplyr::select(-ponderacion_eph, -ua)
k_values <- 2:10
wss <- numeric(length(k_values))
for (k in k_values) {
km <- kmeans(df_cluster,centers = k, nstart = 10)
wss[k-1] <- sum(km$withinss)
}
elbow_plot <- data.frame(K = k_values, WSS = wss) %>%
ggplot(aes(x = K, y = WSS)) +
geom_line() +
geom_point() +
labs(x = "Número de clústeres (K)", y = "Suma de cuadrados dentro del clúster (WSS)",
title = "Método del Codo para determinar el número óptimo de clústeres") +
theme_minimal()
elbow_plot
library(factoextra)
set.seed(123)
kmeans_result <- kmeans(df_cluster, centers = 4)
# Visualizar los resultados ponderados
fviz_cluster(kmeans_result, data = df_cluster, geom = "point")
df_cluster$cluster <- kmeans_result$cluster
aggregate(. ~ cluster, data = df_cluster, FUN = mean)
#unique(df_potencial_ba$voto_final)
comp_elect_bsas <- df_potencial_ba |>
mutate(voto_fpv = ifelse(voto_acotado == "Daniel Scioli" , 1, 0))
# armo df para crear dummys
df_dummys <- df_potencial_ba |>
dplyr::select(gestion_cristina, economia_fliar_2_anos, economia_pais_2_anos, continuidad_o_cambio)
#Creating Dummy Variables
dummy<- data.frame(sapply(df_dummys,function(x) data.frame(model.matrix(~x-1,data =df_dummys))[,-1])) |>
clean_names()
# uno dfs
comp_elect_bsas <- comp_elect_bsas|>
dplyr::select(ua, voto_fpv, ponderacion_eph)|>
cbind(dummy)
df_cluster <- comp_elect_bsas |>
dplyr::select(-ponderacion_eph, -ua)
k_values <- 2:10
wss <- numeric(length(k_values))
for (k in k_values) {
km <- kmeans(df_cluster,centers = k, nstart = 10)
wss[k-1] <- sum(km$withinss)
}
elbow_plot <- data.frame(K = k_values, WSS = wss) %>%
ggplot(aes(x = K, y = WSS)) +
geom_line() +
geom_point() +
labs(x = "Número de clústeres (K)", y = "Suma de cuadrados dentro del clúster (WSS)",
title = "Método del Codo para determinar el número óptimo de clústeres") +
theme_minimal()
elbow_plot
library(factoextra)
set.seed(123)
kmeans_result <- kmeans(df_cluster, centers = 3)
# Visualizar los resultados ponderados
fviz_cluster(kmeans_result, data = df_cluster, geom = "point")
df_cluster$cluster <- kmeans_result$cluster
aggregate(. ~ cluster, data = df_cluster, FUN = mean)
# Visualizar los resultados ponderados
fviz_cluster(kmeans_result, data = df_cluster, show.clust.cent = TRUE,
ellipse.type = "euclid", star.plot = TRUE, repel = TRUE,
pointsize=0.5,outlier.color="darkred") +
labs(title = "Resultados clustering K-means") +
theme_bw() +  theme(legend.position = "none")
# Visualizar los resultados ponderados
fviz_cluster(kmeans_result, data = df_cluster, geom = "point") ++
theme_light() +  theme(legend.position = "none")
# Visualizar los resultados ponderados
fviz_cluster(kmeans_result, data = df_cluster, geom = "point") +
theme_light() +  theme(legend.position = "none")
# Visualizar los resultados ponderados
fviz_cluster(kmeans_result, data = df_cluster, geom = "point") +
theme_light() +  theme(legend.position = "none") +
labs(title = "Resultados clustering K-means - Buenos Aires")
# Visualizar los resultados ponderados
fviz_cluster(kmeans_result, data = df_cluster, geom = "point") +
theme_light() +  theme(legend.position = "bottom") +
labs(title = "Resultados clustering K-means - Buenos Aires")
aggregate(. ~ cluster, data = df_cluster, FUN = mean) |>
kable()
variables_economia <- c("economia_fliar_2_anos_x_empeoro",
"economia_fliar_2_anos_x_se_mantuvo_igual",
"economia_fliar_2_anos_x_no_sabe",
"economia_pais_2_anos_x_empeoro",
"economia_pais_2_anos_x_se_mantuvo_igual",
"economia_pais_2_anos_x_no_sabe")
# Realizar la prueba de chi-cuadrado para cada variable económica
chisq_tests <- list()
for (variable in variables_economia) {
chisq_test <- chisq.test(table(df_cluster[, c("voto_fpv", variable)]))
chisq_tests[[variable]] <- chisq_test
}
# Ver los resultados
for (variable in variables_economia) {
print(paste("Prueba de Chi-cuadrado para la variable:", variable))
print(chisq_tests[[variable]])
print("")
}
elbow_plot <- data.frame(K = k_values, WSS = wss)
esquisse::esquisser(elbow_plot)
elbow_plot <- data.frame(K = k_values, WSS = wss) %>%
ggplot(aes(x = K, y = WSS)) +
geom_line(colour = "#440154") +
geom_point() +
labs(x = "Número de clústeres (K)", y = "Suma de cuadrados dentro del clúster (WSS)",
title = "Método del Codo para determinar el número óptimo de clústeres") +
theme_light() +
theme(
plot.title = element_text(size = 16L,
face = "bold",
hjust = 0.5),
plot.subtitle = element_text(face = "italic",
hjust = 0.5)
)
esquisse::esquisser(elbow_plot)
elbow_plot
elbow_plot <- data.frame(K = k_values, WSS = wss) %>%
ggplot(aes(x = K, y = WSS)) +
geom_line(colour = "#440154") +
geom_point(colour = "#014454") +
labs(x = "Número de clústeres (K)", y = "Suma de cuadrados dentro del clúster (WSS)",
title = "Método del Codo para determinar el número óptimo de clústeres") +
theme_light() +
theme(
plot.title = element_text(size = 16L,
face = "bold",
hjust = 0.5),
plot.subtitle = element_text(face = "italic",
hjust = 0.5)
)
elbow_plot
# Realizo el método de Elbo para saber cuantos clusters realizar
elbow_plot <- data.frame(K = k_values, WSS = wss) %>%
ggplot(aes(x = K, y = WSS)) +
geom_line(colour = "#440154") +
geom_point(colour = "#014454") +
labs(x = "Número de clústeres (K)", y = "Suma de cuadrados dentro del clúster (WSS)",
title = "Método del Codo para determinar \n el número óptimo de clústeres") +
theme_light() +
theme(
plot.title = element_text(size = 16L,
face = "bold",
hjust = 0.5),
plot.subtitle = element_text(face = "italic",
hjust = 0.5)
)
elbow_plot
?? kmeans
knitr::opts_chunk$set(echo = TRUE,warning=FALSE, message=FALSE, error = FALSE)
library(haven)
library(readr)
library(janitor)
library(tidyverse)
library(gt)
library(comunicacion)
library(gridExtra)
library(grid)
library(stringr)
library(RColorBrewer)
library(mice)
library(readxl)
library(kableExtra)
library(anesrake)
library(scales)
library(lmtest)
library(factoextra)
df_cluster <- comp_elect_bsas
df_cluster <- df_cluster[rep(seq_len(nrow(df_cluster)), df_cluster$ponderacion_eph), ]
df_cluster <- comp_elect_bsas
df_cluster <- df_cluster[sample(seq_len(nrow(df_cluster)), size = sum(df_cluster$ponderacion_eph), replace = TRUE, prob = df_cluster$ponderacion_eph), ]
df_cluster <- df_cluster[rep(seq_len(nrow(df_cluster)), df_cluster$ponderacion_eph), ]
df_cluster <- comp_elect_bsas
df_cluster <- df_cluster[rep(seq_len(nrow(df_cluster)), df_cluster$ponderacion_eph), ]
df_cluster <- comp_elect_bsas
# replicamos
df_cluster <- df_cluster[rep(seq_len(nrow(df_cluster)), df_cluster$ponderacion_eph), ]
df_cluster <- df_cluster |>
dplyr::select(-ponderacion_eph, -ua)
k_values <- 2:10
wss <- numeric(length(k_values))
for (k in k_values) {
km <- kmeans(df_cluster,centers = k, nstart = 10)
wss[k-1] <- sum(km$withinss)
}
# Realizo el método de Elbo para saber cuantos clusters realizar
elbow_plot <- data.frame(K = k_values, WSS = wss) %>%
ggplot(aes(x = K, y = WSS)) +
geom_line(colour = "#440154") +
geom_point(colour = "#014454") +
labs(x = "Número de clústeres (K)", y = "Suma de cuadrados dentro del clúster (WSS)",
title = "Método del Codo para determinar \n el número óptimo de clústeres") +
theme_light() +
theme(
plot.title = element_text(size = 16L,
face = "bold",
hjust = 0.5),
plot.subtitle = element_text(face = "italic",
hjust = 0.5)
)
elbow_plot
# semilla
set.seed(123)
# realizamos el cluster
kmeans_result <- kmeans(df_cluster, centers = 3 )
# lo agregamos al dataset
df_cluster$cluster <- kmeans_result$cluster
# resumen
aggregate(. ~ cluster, data = df_cluster, FUN = mean) |>
kable()
# Visualizamos
fviz_cluster(kmeans_result, data = df_cluster, geom = "point") +
theme_light() +  theme(legend.position = "bottom") +
labs(title = "Resultados clustering K-means - Buenos Aires")
install.packages("prettydoc")
df_cluster <- comp_elect_bsas
# replicamos
df_cluster <- df_cluster[rep(seq_len(nrow(df_cluster)), df_cluster$ponderacion_eph), ]
# mostramos
df_cluster |>
head |>
kable()
rm(comp_elect_bsas, df_cluster, df_dummys, df_potencial_ba_cruz, df_potencial_cba_cruz, dummy, elbow_plot, final_model, gestion_cristina,km, k, k_values, num_clusters,variable,variables_economia, wss)
knitr::opts_chunk$set(echo = TRUE,warning=FALSE, message=FALSE, error = FALSE)
library(haven)
library(readr)
library(janitor)
library(tidyverse)
library(gt)
library(comunicacion)
library(gridExtra)
library(grid)
library(stringr)
library(RColorBrewer)
library(mice)
library(readxl)
library(kableExtra)
library(anesrake)
library(scales)
library(lmtest)
library(factoextra)
read_excel("Consigna y materiales TP1/Materiales de referencia/Resultados PASO2015.xlsx",
sheet = "Hoja2") |>
mutate(`Buenos Aires` = paste0(round(`Buenos Aires`*100, 2), "%"),
`Córdoba` = paste0(round(`Córdoba`*100, 2), "%")) |>
kable(format = "html", escape = FALSE) |>
kable_styling(bootstrap_options = "striped", font_size = 14)
CORDOBA <- read_sav("Consigna y materiales TP1/Bases de datos/CORDOBA_FINAL.sav")
GBA <- read_sav("Consigna y materiales TP1/Bases de datos/GBA_FINAL.sav")
# importo las bases
## Cordoba
CORDOBA <- CORDOBA |>
mutate(UA = as.numeric(UA),
EDAD = factor(EDAD,
levels = c(1:4),
labels = c("18-29","30-49","50-65",">65"),
ordered = T),
SEXO = factor(SEXO,
levels = c(1:2),
labels = c("Varón","Mujer"),
ordered = T),
NIV_EDUCATIVO = factor( NIV_EDUCATIVO,
levels = (1:5),
labels = c("Primario completo",
"Secundario incompleto o completo",
"Terciario no univ. incompleto",
"Terciario no univ. completo",
"Universitario incompleto o completo"),
ordered = T),
VOTO_CANDIDATO = case_when(
VOTO_CANDIDATO == 1 ~ "Daniel Scioli",
VOTO_CANDIDATO == 2 ~ "Mauricio Macri",
VOTO_CANDIDATO == 3 ~ "Sergio Massa",
VOTO_CANDIDATO == 4 ~ "Margarita Stolbizer",
VOTO_CANDIDATO == 5 ~ "Nicolas Del Caño",
VOTO_CANDIDATO == 6 ~ "Adolfo Rodriguez Saa",
VOTO_CANDIDATO == 8 ~ "Ninguno / En Blanco",
VOTO_CANDIDATO == 9 ~ "No Sabe"),
VOTO_ACOTADO = case_when(
VOTO_ACOTADO == 1 ~ "Daniel Scioli",
VOTO_ACOTADO == 2 ~ "Mauricio Macri",
VOTO_ACOTADO == 3 ~ "Sergio Massa",
VOTO_ACOTADO == 8 ~ "Ninguno / En Blanco",
VOTO_ACOTADO == 9 ~ "No Sabe"),
JAMAS_VOTARIA = case_when(
JAMAS_VOTARIA == 1 ~ "Daniel Scioli",
JAMAS_VOTARIA == 2 ~ "Mauricio Macri",
JAMAS_VOTARIA == 3 ~ "Sergio Massa",
JAMAS_VOTARIA == 8 ~ "Ninguno / En Blanco",
JAMAS_VOTARIA == 9 ~ "No Sabe"),
GESTION_CRISTINA = factor(GESTION_CRISTINA,
levels = c(1,2,9),
labels = c("Desaprueba","Aprueba","No sabe"),
ordered = T),
ECONOMIA_PAIS_2_AÑOS = factor(ECONOMIA_PAIS_2_AÑOS,
levels = c(1:3,9),
labels = c("Mejoró","Empeoró","Se mantuvo igual","No sabe"),
ordered = T),
ECONOMIA_FLIAR_2_AÑOS = factor(ECONOMIA_FLIAR_2_AÑOS,
levels = c(1:3,9),
labels = c("Mejoró","Empeoró","Se mantuvo igual","No sabe"),
ordered = T),
CONTINUIDAD_O_CAMBIO = factor(CONTINUIDAD_O_CAMBIO,
levels = c(1:3,9),
labels = c("Mantener políticas actuales","Mantener algunas y cambiar otras","Cambiar todas","No sabe"),
ordered = T),
REPRESENTACION_DEL_CAMBIO = case_when(
REPRESENTACION_DEL_CAMBIO == 1 ~ "Sergio Massa",
REPRESENTACION_DEL_CAMBIO == 2 ~ "Mauricio Macri",
REPRESENTACION_DEL_CAMBIO == 3 ~ "Daniel Scioli",
REPRESENTACION_DEL_CAMBIO == 8 ~ "Ninguno",
REPRESENTACION_DEL_CAMBIO == 9 ~ "No sabe"),
AGENDA_DE_TEMAS = case_when(
AGENDA_DE_TEMAS == 1 ~ "Seguridad",
AGENDA_DE_TEMAS == 2 ~ "Economía",
AGENDA_DE_TEMAS == 3 ~ "Respeto de instituciones",
AGENDA_DE_TEMAS == 4 ~ "Educacion, asistencia social, salud",
AGENDA_DE_TEMAS == 5 ~ "Empleo",
AGENDA_DE_TEMAS == 9 ~ "No sabe"
),
PERCEPCION_DE_GANADOR = case_when(
PERCEPCION_DE_GANADOR == 1 ~ "Daniel Scioli",
PERCEPCION_DE_GANADOR == 2 ~ "Mauricio Macri",
PERCEPCION_DE_GANADOR == 3 ~ "Sergio Massa",
PERCEPCION_DE_GANADOR == 4 ~ "Otro",
PERCEPCION_DE_GANADOR == 9 ~ "No sabe"
),
INFLUENCIA_DE_CRISTINA_EN_SCIOLI = factor(INFLUENCIA_DE_CRISTINA_EN_SCIOLI,
levels = c(1:4,9),
labels = c("Ninguna","Poca","Bastante","Mucha","No sabe"),
ordered = T),
POSICIONAMIENTO_ESPACIAL = factor(POSICIONAMIENTO_ESPACIAL,
levels = c(1:5,9),
labels = c("Totalmente de izquierda",
"Más izquierda que derecha",
"Ni de izquierda ni de derecha",
"Más de derecha que de izquierda",
"Totalmente de derecha",
"No sabe"),
ordered = T),
POSICIONAMIENTO_RESPECTO_PERONISMO = factor(POSICIONAMIENTO_RESPECTO_PERONISMO,
levels = c(1:3,9),
labels = c("Peronista","Antiperonista","Ni peronista ni anti peronista","No sabe"),
ordered = T),
POSICIONAMIENTO_RESPECTO_KIRCHNERISMO = factor(POSICIONAMIENTO_RESPECTO_KIRCHNERISMO,
levels = c(1:3,9),
labels = c("Kirchnerista","Anti kirchnerista","Ni kirchnerista ni anti kirchnerista","No sabe"),
ordered = T),
VOTACION_PASO = case_when(
VOTACION_PASO == 0 ~ "No Sabe",
VOTACION_PASO == 1 ~ "Daniel Scioli",
VOTACION_PASO == 2 ~ "Sergio Massa",
VOTACION_PASO == 3 ~ "Mauricio Macri",
VOTACION_PASO == 4 ~ "José Manuel De La Sota",
VOTACION_PASO == 5 ~ "Margarita Stolbizer",
VOTACION_PASO == 6 ~ "Rodriguez Saa",
VOTACION_PASO == 8 ~ "Otros",
VOTACION_PASO == 9 ~ "Blanco / No voto"),
NE_CBA = factor(NE_CBA,
levels = c(1:3),
labels = c("P. Completa","Sec. Comp-Terc. Inc","Terc/Univ. Completo"),
ordered = T)
)|>
clean_names()
## Buenos Aires
GBA <- GBA |>
mutate(UA = as.numeric(UA),
EDAD = factor(EDAD,
levels = c(1:4),
labels = c("18-29","30-49","50-65",">65"),
ordered = T),
SEXO = factor(SEXO,
levels = c(1:2),
labels = c("Varón","Mujer"),
ordered = T),
NIV_EDUCATIVO = factor( NIV_EDUCATIVO,
levels = (1:5),
labels = c("Primario completo",
"Secundario incompleto o completo",
"Terciario no univ. incompleto",
"Terciario no univ. completo",
"Universitario incompleto o completo"),
ordered = T),
VOTO_CANDIDATO = case_when(
VOTO_CANDIDATO == 1 ~ "Daniel Scioli",
VOTO_CANDIDATO == 2 ~ "Mauricio Macri",
VOTO_CANDIDATO == 3 ~ "Sergio Massa",
VOTO_CANDIDATO == 4 ~ "Margarita Stolbizer",
VOTO_CANDIDATO == 5 ~ "Nicolas Del Caño",
VOTO_CANDIDATO == 6 ~ "Adolfo Rodriguez Saa",
VOTO_CANDIDATO == 8 ~ "Ninguno / En Blanco",
VOTO_CANDIDATO == 9 ~ "No Sabe"),
VOTO_ACOTADO = case_when(
VOTO_ACOTADO == 1 ~ "Daniel Scioli",
VOTO_ACOTADO == 2 ~ "Mauricio Macri",
VOTO_ACOTADO == 3 ~ "Sergio Massa",
VOTO_ACOTADO == 8 ~ "Ninguno / En Blanco",
VOTO_ACOTADO == 9 ~ "No Sabe"),
JAMAS_VOTARIA = case_when(
JAMAS_VOTARIA == 1 ~ "Daniel Scioli",
JAMAS_VOTARIA == 2 ~ "Mauricio Macri",
JAMAS_VOTARIA == 3 ~ "Sergio Massa",
JAMAS_VOTARIA == 8 ~ "Ninguno / En Blanco",
JAMAS_VOTARIA == 9 ~ "No Sabe"),
GESTION_CRISTINA = factor(GESTION_CRISTINA,
levels = c(1,2,9),
labels = c("Desaprueba","Aprueba","No sabe"),
ordered = T),
ECONOMIA_PAIS_2_AÑOS = factor(ECONOMIA_PAIS_2_AÑOS,
levels = c(1:3,9),
labels = c("Mejoró","Empeoró","Se mantuvo igual","No sabe"),
ordered = T),
ECONOMIA_FLIAR_2_AÑOS = factor(ECONOMIA_FLIAR_2_AÑOS,
levels = c(1:3,9),
labels = c("Mejoró","Empeoró","Se mantuvo igual","No sabe"),
ordered = T),
CONTINUIDAD_O_CAMBIO = factor(CONTINUIDAD_O_CAMBIO,
levels = c(1:3,9),
labels = c("Mantener políticas actuales","Mantener algunas y cambiar otras","Cambiar todas","No sabe"),
ordered = T),
REPRESENTACION_DEL_CAMBIO = case_when(
REPRESENTACION_DEL_CAMBIO == 1 ~ "Sergio Massa",
REPRESENTACION_DEL_CAMBIO == 2 ~ "Mauricio Macri",
REPRESENTACION_DEL_CAMBIO == 3 ~ "Daniel Scioli",
REPRESENTACION_DEL_CAMBIO == 8 ~ "Ninguno",
REPRESENTACION_DEL_CAMBIO == 9 ~ "No sabe"),
AGENDA_DE_TEMAS = case_when(
AGENDA_DE_TEMAS == 1 ~ "Seguridad",
AGENDA_DE_TEMAS == 2 ~ "Economía",
AGENDA_DE_TEMAS == 3 ~ "Respeto de instituciones",
AGENDA_DE_TEMAS == 4 ~ "Educacion, asistencia social, salud",
AGENDA_DE_TEMAS == 5 ~ "Empleo",
AGENDA_DE_TEMAS == 9 ~ "No sabe"
),
PERCEPCION_DE_GANADOR = case_when(
PERCEPCION_DE_GANADOR == 1 ~ "Daniel Scioli",
PERCEPCION_DE_GANADOR == 2 ~ "Mauricio Macri",
PERCEPCION_DE_GANADOR == 3 ~ "Sergio Massa",
PERCEPCION_DE_GANADOR == 4 ~ "Otro",
PERCEPCION_DE_GANADOR == 9 ~ "No sabe"
),
INFLUENCIA_DE_CRISTINA_EN_SCIOLI = factor(INFLUENCIA_DE_CRISTINA_EN_SCIOLI,
levels = c(1:4,9),
labels = c("Ninguna","Poca","Bastante","Mucha","No sabe"),
ordered = T),
POSICIONAMIENTO_ESPACIAL = factor(POSICIONAMIENTO_ESPACIAL,
levels = c(1:5,9),
labels = c("Totalmente de izquierda",
"Más izquierda que derecha",
"Ni de izquierda ni de derecha",
"Más de derecha que de izquierda",
"Totalmente de derecha",
"No sabe"),
ordered = T),
POSICIONAMIENTO_RESPECTO_PERONISMO = factor(POSICIONAMIENTO_RESPECTO_PERONISMO,
levels = c(1:3,9),
labels = c("Peronista","Antiperonista","Ni peronista ni anti peronista","No sabe"),
ordered = T),
POSICIONAMIENTO_RESPECTO_KIRCHNERISMO = factor(POSICIONAMIENTO_RESPECTO_KIRCHNERISMO,
levels = c(1:3,9),
labels = c("Kirchnerista","Anti kirchnerista","Ni kirchnerista ni anti kirchnerista","No sabe"),
ordered = T),
VOTACION_PASO = case_when(
VOTO_PASO == 0 ~ "No Sabe",
VOTO_PASO == 1 ~ "Daniel Scioli",
VOTO_PASO == 2 ~ "Sergio Massa",
VOTO_PASO == 3 ~ "Mauricio Macri",
VOTO_PASO == 4 ~ "José Manuel De La Sota",
VOTO_PASO == 5 ~ "Margarita Stolbizer",
VOTO_PASO == 6 ~ "Rodriguez Saa",
VOTO_PASO == 8 ~ "Otros",
VOTO_PASO == 9 ~ "Blanco / No voto"),
NE_BSAS = factor(NE_BSAS,
levels = c(1:3),
labels = c("P. Completa","Sec. Comp-Terc. Inc","Terc/Univ. Completo"),
ordered = T))|>
clean_names() |>
select(-voto_paso)
